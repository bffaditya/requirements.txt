replicate
requests
os
PIL Image, ImageDraw, ImageFont, ImageEnhance
rembg
pyrogram
pyrogram Client, filters
random
tgcrypto

# 🔹 API KEYS SETUP
REPLICATE_API_TOKEN = "r8_bUsYZyxQZS6r8WvqzYQ98qu9my842KG08X8FS"
TELEGRAM_BOT_API = "7607722553:AAGZ19j9rBWftGzVUfBq1-OuMFhXdNpozGY"

# 🔹 AI Model (Stable Diffusion XL)
model = "stability-ai/stable-diffusion-xl"

# 🔹 Telegram Bot Setup
app = Client("thumbnail_bot", bot_token=TELEGRAM_BOT_API)

# 🔹 Theme-Based Colors & Fonts
theme_styles = {
    "Gaming": {"color": (255, 0, 0), "font": "gaming_font.ttf"},
    "Tech": {"color": (0, 255, 255), "font": "tech_font.ttf"},
    "Finance": {"color": (50, 200, 50), "font": "finance_font.ttf"},
    "Vlogs": {"color": (255, 200, 0), "font": "vlogs_font.ttf"},
    "News": {"color": (255, 255, 255), "font": "news_font.ttf"}
}

# 🔹 Thumbnail Generate Function
def generate_thumbnail(user_image_path, prompt, title, subtitle, aspect_ratio, theme):
    width, height = aspect_ratio

    # 🔸 AI Generated Background
    output = replicate.run(
        model,
        input={"prompt": prompt, "width": width, "height": height}
    )
    bg_url = output[0]
    bg_data = requests.get(bg_url).content
    bg_path = "background.jpg"

    with open(bg_path, "wb") as file:
        file.write(bg_data)

    # 🔸 User Image Processing
    if user_image_path:
        user_img = Image.open(user_image_path).convert("RGBA")
        user_img = user_img.resize((400, 400))
        user_img = rembg.remove(user_img)
    else:
        user_img = None

    # 🔸 Select Theme
    theme_style = theme_styles.get(theme, theme_styles["Tech"])
    text_color = theme_style["color"]
    font_path = theme_style["font"]

    # 🔸 Final Thumbnail Design
    img = Image.open(bg_path).convert("RGBA")
    draw = ImageDraw.Draw(img)

    # 🔸 Professional Font Setup
    title_font = ImageFont.truetype(font_path, 90)
    subtitle_font = ImageFont.truetype(font_path, 50)

    # 🔸 Text Shadow & 3D Stroke Effect
    shadow_offset = 4
    draw.text((50+shadow_offset, height-200+shadow_offset), title, (0, 0, 0), font=title_font)
    draw.text((50, height-200), title, text_color, font=title_font)
    
    draw.text((50+shadow_offset, height-120+shadow_offset), subtitle, (0, 0, 0), font=subtitle_font)
    draw.text((50, height-120), subtitle, text_color, font=subtitle_font)

    # 🔸 Add User Image on Thumbnail
    if user_img:
        img.paste(user_img, (width-450, height-450), user_img)

    # 🔸 AI Color Enhancement (Vibrancy & HDR)
    enhancer = ImageEnhance.Color(img)
    img = enhancer.enhance(1.7)

    # 🔸 Auto Watermark
    watermark_font = ImageFont.truetype("arial.ttf", 30)
    draw.text((width - 200, height - 50), "@YourBrand", (150, 150, 150), font=watermark_font)

    # 🔸 Save Final Thumbnail
    final_path = f"final_thumbnail_{random.randint(1, 1000)}.jpg"
    img.save(final_path)
    return final_path

# 🔹 Auto Hashtags Generator
def generate_hashtags(title):
    words = title.lower().split()
    hashtags = ["#" + word for word in words if len(word) > 3]
    return " ".join(hashtags[:5])

# 🔹 Telegram Commands
@app.on_message(filters.command("start"))
def start(client, message):
    message.reply_text("👋 Welcome! Send an image and a title to generate a professional thumbnail.")

@app.on_message(filters.photo)
def receive_photo(client, message):
    file_path = message.download()
    message.reply_text("✅ Image received! Now send the **title & subtitle** (Format: `Title | Subtitle`)")

    @app.on_message(filters.text)
    def generate(client, msg):
        if "|" in msg.text:
            title, subtitle = msg.text.split("|")
        else:
            title = msg.text
            subtitle = ""

        # 🔹 Select Theme
        message.reply_text("🎨 Choose a Theme: Gaming, Tech, Finance, Vlogs, News")
        
        @app.on_message(filters.text)
        def choose_theme(client, msg):
            theme = msg.text if msg.text in theme_styles else "Tech"

            # 🔹 AI Thumbnail Generation
            prompt = "Professional YouTube thumbnail background, high contrast, vibrant colors, ultra HD"
            aspect_ratio = (1280, 720)
            final_thumbnail = generate_thumbnail(file_path, prompt, title, subtitle, aspect_ratio, theme)

            # 🔹 Auto Hashtags
            hashtags = generate_hashtags(title)

            # 🔹 Send Final Thumbnail
            message.reply_photo(photo=final_thumbnail, caption=f"🎉 **Your Professional Thumbnail!**\n\n{hashtags}")
            os.remove(file_path)

print("\n🚀 Telegram AI Thumbnail Bot Running...")
app.run()
